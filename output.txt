Mon Oct 21 23:47:44 PDT 2019

*** compiling with clang++ to create an executable called myprogram
clang version 3.8.1-24 (tags/RELEASE_381/final)
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
In file included from bsttest.cpp:21:
./bst.hpp:400:2: warning: control reaches end of non-void function
      [-Wreturn-type]
        }
        ^
./bst.hpp:556:3: note: in instantiation of member function
      'BST<std::__cxx11::basic_string<char> >::copyHelper' requested here
                copyHelper(Bst.Root);
                ^
bsttest.cpp:108:14: note: in instantiation of member function
      'BST<std::__cxx11::basic_string<char> >::BST' requested here
        BST<string> B4(B3);
                    ^
In file included from bsttest.cpp:21:
./bst.hpp:400:2: warning: control reaches end of non-void function
      [-Wreturn-type]
        }
        ^
./bst.hpp:556:3: note: in instantiation of member function
      'BST<int>::copyHelper' requested here
                copyHelper(Bst.Root);
                ^
bsttest.cpp:226:16: note: in instantiation of member function 'BST<int>::BST'
      requested here
        BST<int> B2 = B1;
                      ^
2 warnings generated.

*** running clang-tidy using options from .clang-tidy
LLVM (http://llvm.org/):
  LLVM version 3.8.1

  Optimized build.
  Built Jun  2 2017 (13:11:29).
  Default target: x86_64-pc-linux-gnu
  Host CPU: ivybridge
18379 warnings generated.
28729 warnings generated.
/home/NETID/sambhavi/css343/bst/bst.hpp:288:3: warning: don't use else after ret                                                                                        urn [readability-else-after-return]
                else {
                ^
/home/NETID/sambhavi/css343/bst/bst.hpp:314:3: warning: don't use else after ret                                                                                        urn [readability-else-after-return]
                else if (Root->Right == nullptr) {  // Root has left node
                ^
/home/NETID/sambhavi/css343/bst/bst.hpp:352:27: warning: invalid case style for                                                                                         parameter 'visit' [readability-identifier-naming]
        void preOrderHelper(void visit(const T &Item), Node *N)const {
                                 ^
/home/NETID/sambhavi/css343/bst/bst.hpp:400:2: warning: control reaches end of n                                                                                        on-void function [clang-diagnostic-return-type]
        }
        ^
/home/NETID/sambhavi/css343/bst/bst.hpp:556:3: note: in instantiation of member                                                                                         function 'BST<int>::copyHelper' requested here
                copyHelper(Bst.Root);
                ^
/home/NETID/sambhavi/css343/bst/bsttest.cpp:226:16: note: in instantiation of me                                                                                        mber function 'BST<int>::BST' requested here
        BST<int> B2 = B1;
                      ^
/home/NETID/sambhavi/css343/bst/bst.hpp:578:11: warning: redundant boolean liter                                                                                        al in conditional return statement [readability-simplify-boolean-expr]
                        return true;
                               ^
/home/NETID/sambhavi/css343/bst/bst.hpp:651:3: warning: don't use else after ret                                                                                        urn [readability-else-after-return]
                else {
                ^
/home/NETID/sambhavi/css343/bst/bsttest.cpp:41:22: warning: construction of 'SS'                                                                                         with static storage duration may throw an exception that cannot be caught [cert                                                                                        -err58-cpp]
        static stringstream SS;
                            ^
/usr/lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/sstream:690:7:                                                                                         note: possibly throwing constructor declared here
      basic_stringstream(ios_base::openmode __m = ios_base::out | ios_base::in)
      ^
/home/NETID/sambhavi/css343/bst/bsttest.cpp:66:27: warning: construction of 'SS'                                                                                         with static storage duration may throw an exception that cannot be caught [cert                                                                                        -err58-cpp]
stringstream TreeVisitor::SS;
                          ^
/usr/lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/sstream:690:7:                                                                                         note: possibly throwing constructor declared here
      basic_stringstream(ios_base::openmode __m = ios_base::out | ios_base::in)
      ^
Suppressed 28710 warnings (28710 in non-user code).
Use -header-filter=.* to display errors from all non-system headers.

*** running myprogram
Starting testPisan01
* Testing == and !=
Ending testPisan01
Starting testPisan02
* Testing == and != with more detail
simplecompile.sh: line 31:  7314 Illegal instruction     ./myprogram

*** running with valgrind
==7315== Memcheck, a memory error detector
==7315== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==7315== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==7315== Command: ./myprogram
==7315==
Starting testPisan01
* Testing == and !=
Ending testPisan01
Starting testPisan02
* Testing == and != with more detail
==7315== valgrind: Unrecognised instruction at address 0x4078dd.
==7315==    at 0x4078DD: BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::copyHelper(BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Node const*) (bst.hpp:394)
==7315==    by 0x4078C3: BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::copyHelper(BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Node const*) (bst.hpp:397)
==7315==    by 0x4062EF: BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::BST(BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.hpp:556)
==7315==    by 0x402A5F: testPisan02() (bsttest.cpp:108)
==7315==    by 0x405EDD: testBSTAll() (bsttest.cpp:321)
==7315==    by 0x40B193: main (main.cpp:17)
==7315== Your program just tried to execute an instruction that Valgrind
==7315== did not recognise.  There are two possible reasons for this.
==7315== 1. Your program has a bug and erroneously jumped to a non-code
==7315==    location.  If you are running Memcheck and you just saw a
==7315==    warning about a bad jump, it's probably your program's fault.
==7315== 2. The instruction is legitimate but Valgrind doesn't handle it,
==7315==    i.e. it's Valgrind's fault.  If you think this is the case or
==7315==    you are not sure, please let us know and we'll try to fix it.
==7315== Either way, Valgrind will now raise a SIGILL signal which will
==7315== probably kill your program.
==7315==
==7315== Process terminating with default action of signal 4 (SIGILL)
==7315==  Illegal opcode at address 0x4078DD
==7315==    at 0x4078DD: BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::copyHelper(BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Node const*) (bst.hpp:394)
==7315==    by 0x4078C3: BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::copyHelper(BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Node const*) (bst.hpp:397)
==7315==    by 0x4062EF: BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::BST(BST<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.hpp:556)
==7315==    by 0x402A5F: testPisan02() (bsttest.cpp:108)
==7315==    by 0x405EDD: testBSTAll() (bsttest.cpp:321)
==7315==    by 0x40B193: main (main.cpp:17)
==7315==
==7315== HEAP SUMMARY:
==7315==     in use at exit: 576 bytes in 12 blocks
==7315==   total heap usage: 19 allocs, 7 frees, 74,768 bytes allocated
==7315==
==7315== LEAK SUMMARY:
==7315==    definitely lost: 0 bytes in 0 blocks
==7315==    indirectly lost: 0 bytes in 0 blocks
==7315==      possibly lost: 0 bytes in 0 blocks
==7315==    still reachable: 576 bytes in 12 blocks
==7315==         suppressed: 0 bytes in 0 blocks
==7315== Rerun with --leak-check=full to see details of leaked memory
==7315==
==7315== For counts of detected and suppressed errors, rerun with: -v
==7315== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
simplecompile.sh: line 36:  7315 Illegal instruction     valgrind ./myprogram
*** cleaning up, deleting myprogram
Mon Oct 21 23:47:50 PDT 2019
